@charset "UTF-8";

/*
    Paleta de cores
    verde: #49a09d
    Lilás: #5f2c82
*/

* {
    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
    padding: 0px;
    margin: 0px;
    box-sizing: border-box;
    /* 
O uso do "border-box" pode ser útil para evitar problemas de layout, já que você pode definir o tamanho de um elemento sem se preocupar com o impacto das bordas e do padding.*/
}

body, html {
    background: #5f2c82;
    height: 100vh;
    width: 100vw;
}

main {
    position: relative;
    height: 100vh;
    width: 100vw;
}

section#login {
    position: fixed;
    top: 50%;
    left: 50%;
    overflow: hidden;
    background-color: white;
    width: 250px;
    height: 515px;
    border-radius: 20px;
    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.446);
    transition: width 0.5s, height 0.5s;
    transition-timing-function: ease;
    transform: translate(-50%, -50%); /*Qualquer transform sempre colocar ele em último*/
    /*
    Overflow é uma propriedade CSS que especifica como lidar com conteúdo que excede o tamanho de um elemento. Se o conteúdo de um elemento for maior do que o seu tamanho especificado, a propriedade overflow especifica como o excesso de conteúdo deve ser exibido. Os valores comuns para overflow incluem:

visible: O conteúdo excedente é exibido fora do elemento, sem nenhum scroll.

hidden: O conteúdo excedente é oculto e não é exibido.

scroll: O conteúdo excedente é oculto e o usuário pode rolar o elemento para ver o restante do conteúdo.

auto: O comportamento é como o "scroll" se o conteúdo exceder o tamanho do elemento, mas como "visible" caso contrário.*/
}

section#login > div.imagem {
    display: block;
    background: #5f2c82 url(../imagens/predio.jpg) no-repeat;
    background-size: cover;
    background-position: left bottom;
    height: 200px;
}

section#login > div.formulario {
    display: block;
    padding: 10px;
}
div.formulario > h1 {
    text-align: center;
    margin-bottom: 10px;
}

div.formulario > p {
    font-size: 0.8em;
    margin: 10px 0px;
}

form > div.campo {
   background-color: #5f2c82;
   border: 2px solid #5f2c82 ;
   height: 40px;
   border-radius: 8px;
   margin: 5px 0px;
}

div.campo > label {
    display: none;
}

div.campo > span {
    color: white;
    font-size: 2em;
    width: 40px;
    padding: 5px;
}

div.campo > input {
    background-color: #66e2de;
    font-size: 1em;
    width: calc(100% - 45px);
    height: 100%;
    border: 0px;
    border-radius: 8px;
    padding: 8px;
    transform: translateY(-12px); /*Qualquer transform sempre colocar ele em último*/
    /* A função calc() é uma função CSS que permite fazer cálculos matemáticos no estilo de um elemento. Ela é útil quando você precisa calcular uma largura ou altura com base em valores dinâmicos, como a largura da tela ou o tamanho da fonte.

A sintaxe para a função calc() é a seguinte:

calc(expression)

Onde "expression" é a expressão matemática a ser avaliada. Por exemplo:

width: calc(100% - 40px);

Isso irá definir a largura de um elemento como 100% menos 40 pixels.

A função calc() é suportada em muitos navegadores modernos, incluindo Google Chrome, Mozilla Firefox e Microsoft Edge.*/
}

div.campo > input:focus-within {
    background-color: white;
    /* O "focus-within" é uma pseudo-classe CSS que permite aplicar estilos a um elemento pai quando um dos seus descendentes estiver com foco. Isso é útil quando você quer alterar o estilo de um elemento pai quando um elemento filho estiver ativo, sem precisar adicionar classes ao HTML. Suporte para o "focus-within" varia entre navegadores, mas está disponível em muitos modernos.*/
}

form > input[type=submit] {
    display: block;
    font-size: 1em;
    width: 100%;
    height: 40px;
    padding-top: 5px;
    margin-top: 5px;
    background-color: #49a09d;
    color: white;
    border: none;
    border-radius: 5px;
    cursor: pointer;
}

form> input[type=submit]:hover {
    background-color: #2d6462;
}

form > a.botao {
    display: block;
    text-align: center;
    font-size: 1em;
    width: 100%;
    height: 40px;
    padding-top: 5px;
    margin-top: 5px;
    color: #2d6462;
    background-color: #ffffff;
    border: 1px solid #49a09d;
    border-radius: 5px;
    text-decoration: none;
}

form > a.botao > i {
    font-size: 1em;
}

form> a.botao:hover {
    background-color: #839291;
}